name: croniter
on: [workflow_dispatch, push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        set -ex
        python -m pip install --upgrade --use-pep517 pip
        pip install --use-pep517 -r requirements/test.txt
    - name: Test with pytest
      run: |
           pyver=$(python --version 2>&1 | awk '{print substr($2, 0, 4)}' | awk '{ sub(/[ \t]+$/, ""); print }');
           case $pyver in
             2.7) tox -e "py${pyver//\.}-{std,coverage}";;
             *) tox -e "py${pyver//\.}-std";;
           esac
  build32:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        set -ex
        cp .env.32 .env
        docker-compose build
    - name: Test with pytest
      run: |
           docker-compose build
           docker-compose run --rm --entrypoint tox app --direct -e py312-std
